// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.firebears.subsystems;

import org.firebears.RobotMap;
import org.firebears.commands.*;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.command.PIDSubsystem;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;


/**
 *
 */
public class DefenseBuster extends PIDSubsystem {

	final double max_speed = 0.8;


    public DefenseBuster() {
		super(0.1, 0, 0);
		LiveWindow.addActuator("defenseBuster", "PIDSubsystem Controller", getPIDController());
//		getPIDController().setInputRange(0.73, 0.90);
		getPIDController().setAbsoluteTolerance(0.01);
//		getPIDController().enable();
	}


    private CANTalon angleMotor = RobotMap.defenseBusterAngleMotor;



    public void initDefaultCommand() {
    }

	@Override
	protected double returnPIDInput() {
System.out.println("::: " + RobotMap.defenseBusterAnalogInput.getAverageVoltage());
		return RobotMap.defenseBusterAnalogInput.getAverageVoltage();
	}

	@Override
	protected void usePIDOutput(double output) {
		output = Math.max((max_speed*-1), Math.min(output, max_speed));
System.out.println(":::\t\t" + output);
		angleMotor.set(output);

	}
}

